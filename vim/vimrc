" VIM Settings
set noerrorbells
set nocompatible

" settings
" tabbing settings
" No line wrapping
set nowrap
" Use 2 spaces for indentation
set shiftwidth=2
" Use 2 spaces for soft tab
set softtabstop=2
" Use 2 spaces for tab
set tabstop=2
" Expand tab to spaces
set expandtab

" turn hybrid line numbers on
:set number relativenumber

:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END

set backspace=indent,eol,start  " Makes backspace key more powerful.
set showcmd                     " Show me what I'm typing
set showmode                    " Show current mode.

set noswapfile                  " Don't use swapfile
set nobackup					          " Don't create annoying backup files
set nowritebackup
set splitright                  " Split vertical windows right to the current windows
set splitbelow                  " Split horizontal windows below to the current windows
set encoding=utf-8              " Set default encoding to UTF-8
set autowrite                   " Automatically save before :next, :make etc.
set autoread                    " Automatically reread changed files without asking me anything
set ttyfast

if has("autocmd")
    " Load files for specific filetypes
    filetype on
    filetype indent on
    filetype plugin on

    " Languages with specific tabs/space requirements
    autocmd FileType make setlocal ts=4 sts=4 sw=4 noexpandtab
endif

if has("wildmenu")
    " Show a list of possible completions
    set wildmenu
    " Tab autocomplete longest possible part of a string, then list
    set wildmode=longest,list
    if has ("wildignore")
        set wildignore+=*.a,*.pyc,*.o,*.orig
        set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.jpeg,*.png
        set wildignore+=.DS_Store,.git,.hg,.svn
        set wildignore+=*~,*.sw?,*.tmp
    endif
endif

if has("extra_search")
    " Highlight searches [use :noh to clear]
    set hlsearch
    " Highlight dynamically as pattern is typed
    set incsearch
    " Ignore case of searches...
    set ignorecase
    " ...unless has mixed case
    set smartcase
endif

" PLUGINS
"
call plug#begin()
" Helps avoid trailing whitespace
Plug 'ntpeters/vim-better-whitespace'
" Sensible Vim defaults
Plug 'tpope/vim-sensible'
" Managing Git better inside of Vim
Plug 'tpope/vim-fugitive'
" Managing quotes, parenthesis, etc in pairs
Plug 'tpope/vim-surround'
" Managing syntax highlighting and linting
Plug 'scrooloose/syntastic'
" For better comment management in Vim
" Plug 'scrooloose/nerdcommenter'
" For file navigation in Vim
Plug 'scrooloose/nerdtree'
" For better Git inside of Nerdtree
Plug 'Xuyuanp/nerdtree-git-plugin'
" Fancier bottom bar in Vim
Plug 'vim-airline/vim-airline'
" Themes for Vim Airline
Plug 'vim-airline/vim-airline-themes'
" For solarized-dark in Vim
Plug 'altercation/vim-colors-solarized'
" For text alignment
" Plug 'godlygeek/tabular'
" For auto closing of quotes, parenthesis, brackets, etc.
Plug 'raimondi/delimitmate'
" For better Vim-Tmux Integration
Plug 'christoomey/vim-tmux-navigator'
" For Rust
Plug 'rust-lang/rust.vim'
" For LaTeX
Plug 'lervag/vimtex'
" Navigate VIM easier.
" Plug 'easymotion/vim-easymotion'
call plug#end()

if has('statusline')
    " Always show status line
    set laststatus=2
    " Broken down into easily includeable segments
    " Filename
    set statusline=%<%f\
    " Options
    set statusline+=%w%h%m%r
    " Current dir
    set statusline+=\ [%{getcwd()}]
    " Right aligned file nav info
    set statusline+=%=%-14.(%l,%c%V%)\ %p%%
endif

" customize solarized dark
set t_Co=256
syntax on
set background=dark
colorscheme solarized

" NerdTree configurations
map <C-o> :NERDTreeToggle<CR>

" set airline to solarized dark
let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'

" Settings for syntastic
set statusline+=%{FugitiveStatusline()}
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Settings for Vimtex
let g:tex_flavor='latex'
let g:vimtex_quickfix_mode=0
set conceallevel=1
let g:tex_conceal='abdmg'
